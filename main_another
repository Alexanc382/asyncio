from tkinter import *
from tkinter import ttk
from tkinter import messagebox as mb
from io import BytesIO
import requests
from PIL import Image, ImageTk
import asyncio
from g4f.client import AsyncClient

photo_image = None

def send_func():
    user_input = search_image_entry.get()
    return user_input

async def main():
    user_input = send_func()
    client = AsyncClient()
    response = await client.images.generate(
        prompt=f"{user_input}",
        model="flux",
        response_format="url"
        # Add any other necessary parameters
    )

    image_url = response.data[0].url
    print(f"Generated image URL: {image_url}")
    return image_url

asyncio.run(main())


def get_image(image_url):
    try:
        response = requests.get(image_url, stream=True)
        response.raise_for_status()
        image_data = BytesIO(response.content)
        img_result = Image.open(image_data)
        img_result.thumbnail((300, 300))
        label_result.config(image=img_result)
        label_result.image = img_result
    except Exception as e:
        error_mess = mb.showerror(f'Ошибка {e}')



window = Tk()
window.title('Сгенерируем картинку?')

# размер окна и параметры его отображения(посередине экрана)
screenwidth = window.winfo_screenwidth()
screenheight = window.winfo_screenheight()
width_position = screenwidth // 2 - 200
height_position = screenheight // 2 - 230
window.geometry(f'400x460+{width_position}+{height_position}')

# метки приветствия
label_1 = ttk.Label(text='Помогу тебе сгенерировать изображение')
label_1.grid(row=0, columnspan=2, padx=(80, 0), pady=(20, 0)) # приветствие
label_2 = ttk.Label(text='Напиши в поле ввода свой запрос на английском')
label_2.grid(row=1, columnspan=2, padx=(75, 0)) # ожидание от пользователя

# поле ввода
search_image_entry = ttk.Entry(window)
search_image_entry.grid(row=2, column=0, padx=(60, 0))

# кнопка
send_button = ttk.Button(text='Тыкни для картинки', command=send_func)
send_button.grid(row=2, column=1)

# # картинка смайлика в конце
# image = Image.open('smile-emoji.jpg')
# image.thumbnail((100, 100))
# image_start_window = ImageTk.PhotoImage(image)
# label_img = ttk.Label(window, text='test', image = image_start_window)
# label_img.grid(row=3, column=0, padx=(50, 0))

label_result = ttk.Label(window, get_image())
label_result.grid(row=4, column=0, padx=(50, 0))



window.mainloop()
